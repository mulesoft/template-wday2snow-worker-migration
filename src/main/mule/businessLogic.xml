<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:workday="http://www.mulesoft.org/schema/mule/workday"
      xmlns:servicenow="http://www.mulesoft.org/schema/mule/servicenow"
      xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
      xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
      xmlns:email="http://www.mulesoft.org/schema/mule/email" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/servicenow http://www.mulesoft.org/schema/mule/servicenow/current/mule-servicenow.xsd
http://www.mulesoft.org/schema/mule/workday http://www.mulesoft.org/schema/mule/workday/current/mule-workday.xsd">

<flow name="businessLogicFlow" doc:id="884f86c5-66e1-4701-bb9b-594c2a60abf3" >
		<batch:job jobName="migrateWorkersBatch" doc:id="79b373e6-1aeb-43a9-9dfe-8ac0d2f31fdc" blockSize="${page.size}">
        <batch:process-records >
            <batch:step name="getWorkersFromServiceNow" doc:id="232087de-e311-49c1-a890-439c65ea1af2" >
					<ee:transform doc:name="Create getRecords Request" doc:id="8d50e20d-216a-4b43-bf00-7cb8959d591a" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns ns0 http://www.service-now.com/sys_user
var userAccountData = payload.Worker_Data.User_Account_Data
---
using (personalData = payload.Worker_Data.Personal_Data)
{
	ns0#getRecords: {
		(ns0#email: personalData.Contact_Data.Email_Address_Data.Email_Address) if (userAccountData.User_Name == null),
		(ns0#"first_name": personalData.Name_Data.Preferred_Name_Data.Name_Detail_Data.First_Name) if (userAccountData.User_Name == null),
		(ns0#"last_name": personalData.Name_Data.Preferred_Name_Data.Name_Detail_Data.Last_Name) if (userAccountData.User_Name == null),
		(ns0#"user_name": userAccountData.User_Name) if (userAccountData.User_Name != null)
	}
}]]></ee:set-payload>
						</ee:message>
						<ee:variables >
							<ee:set-variable variableName="worker" ><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-variable>
						</ee:variables>
					</ee:transform>
					<servicenow:invoke service="sys_user" operation="getRecords" doc:name="Query user in ServiceNow" doc:id="71da9c9e-40bc-4a26-a401-b27c6a647a15" config-ref="ServiceNow_Config" />
					<ee:transform doc:name="Get User ID" doc:id="835b5a3e-7773-4462-83bc-9830f0eb0c96" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
vars.worker ++ {
	snowUserId: payload.body.getRecordsResponse.getRecordsResult.sys_id
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
            </batch:step>
				<batch:step name="createUsersInServiceNowStep" doc:id="13d29b30-853d-4c44-92d1-f53749e3e436" acceptExpression="#[payload != null and payload.snowUserId == null]">
					<ee:transform doc:name="Create insert Request" doc:id="c3c1f7b5-1fc5-4c4a-a61e-1f42198d1cfe" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns ns0 http://www.service-now.com/sys_user
---
using (personalData = payload.Worker_Data.Personal_Data)
{
	ns0#insert: {
		ns0#active        : 1,
		ns0#city          : personalData.Contact_Data.Address_Data.Municipality,
		ns0#country       : personalData.Contact_Data.Address_Data.Country_Reference.ID,
		ns0#email         : personalData.Contact_Data.Email_Address_Data.Email_Address,
		ns0#"first_name"  : personalData.Name_Data.Preferred_Name_Data.Name_Detail_Data.First_Name,
		ns0#"home_phone"  : personalData.Contact_Data.Phone_Data.Phone_Number,
		ns0#"last_name"   : personalData.Name_Data.Preferred_Name_Data.Name_Detail_Data.Last_Name,
		ns0#state         : personalData.Contact_Data.Address_Data.Country_Region_Reference.ID,
		ns0#street        : personalData.Contact_Data.Address_Data.Address_Line_Data,
		(ns0#"user_name"  : payload.Worker_Data.User_Account_Data.User_Name) if (payload.Worker_Data.User_Account_Data != null and payload.Worker_Data.User_Account_Data.User_Name != null),
		ns0#"zip"         : personalData.Contact_Data.Address_Data.Postal_Code
	}
}

]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<servicenow:invoke service="sys_user" operation="insert" doc:name="Insert data" doc:id="6fb1f1c1-cf33-4416-aada-7b15d43d931e" config-ref="ServiceNow_Config" />
				</batch:step>
				<batch:step name="updateUsersInServiceNowStep" doc:id="495279da-ca4e-49ec-a805-f7f9c9334950" acceptExpression="#[payload != null and payload.snowUserId != null]">
					<ee:transform doc:name="Create update Request" doc:id="c23b3c3b-074c-4f54-9c05-aa8964177cfc" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns ns0 http://www.service-now.com/sys_user
---
using (personalData = payload.Worker_Data.Personal_Data)
{
	ns0#update: {
		ns0#"sys_id"      : payload.snowUserId,
		ns0#active        : 1,
		ns0#city          : personalData.Contact_Data.Address_Data.Municipality,
		ns0#country       : personalData.Contact_Data.Address_Data.Country_Reference.ID,
		ns0#email         : personalData.Contact_Data.Email_Address_Data.Email_Address,
		ns0#"first_name"  : personalData.Name_Data.Preferred_Name_Data.Name_Detail_Data.First_Name,
		ns0#"home_phone"  : personalData.Contact_Data.Phone_Data.Phone_Number,
		ns0#"last_name"   : personalData.Name_Data.Preferred_Name_Data.Name_Detail_Data.Last_Name,
		ns0#state         : personalData.Contact_Data.Address_Data.Country_Region_Reference.ID,
		ns0#street        : personalData.Contact_Data.Address_Data.Address_Line_Data,
		(ns0#"user_name"  : payload.Worker_Data.User_Account_Data.User_Name) if (payload.Worker_Data.User_Account_Data != null and payload.Worker_Data.User_Account_Data.User_Name != null),
		ns0#"zip"         : personalData.Contact_Data.Address_Data.Postal_Code
	}
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<servicenow:invoke service="sys_user" operation="update" doc:name="Update data" doc:id="9085544b-652e-4d6b-9078-e760725ed15d" config-ref="ServiceNow_Config" />
				</batch:step>
        </batch:process-records>
        <batch:on-complete >
            <scatter-gather doc:name="Scatter-Gather" doc:id="ef2964ef-0b85-4c6c-a5ee-b834df639e7b">
                <route>
                    <logger level="INFO" doc:name="Migration process has finished!" doc:id="b7575d38-7dbd-4602-9186-1bbb25234896" message="Migration process has finished!" />
                </route>
                <route>
                    <ee:transform doc:name="Prepare migration result email"
                                  doc:id="c84b4bc4-5a65-41c1-9d0c-f1ebd3d8db7a">
                        <ee:message>
                            <ee:set-payload><![CDATA[%dw 2.0
 output text/plain
 ---
 "Migration Report: \n"

 ++ "\n Time [milliseconds]: " 		++ payload.elapsedTimeInMillis!
 ++ "\n Total Records: "				++ payload.totalRecords!
 ++ "\n Successful Records: "		++ payload.successfulRecords!
 ++ "\n Failed Records: "			++ payload.failedRecords!
 ++ "\n Loaded Records: "			++ payload.loadedRecords!
 ++ "\n Processed Records: " 		++ payload.processedRecords!]]></ee:set-payload>
                        </ee:message>
                    </ee:transform>
                    <email:send config-ref="Gmail_SMTP" doc:name="Send migration result email"
                                doc:id="5896eaa9-dd10-47a2-a6fc-6319b11dbd06" fromAddress="${mail.from}"
                                subject="${mail.subject}">
                        <email:to-addresses>
                            <email:to-address value="${mail.to}" />
                        </email:to-addresses>
                    </email:send>
                </route>
            </scatter-gather>
        </batch:on-complete>
    </batch:job>
</flow>
	<sub-flow name="queryFromWorkdaySubFlow" doc:id="d7624637-845f-4600-9b62-34c5095182b9">
		<ee:transform doc:name="Prepare Get Workers request" doc:id="0e2062da-4a79-471a-bbf5-80038e92ce9b">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/xml
ns ns0 urn:com.workday/bsvc
---
{
    ns0#Get_Workers_Request: {
        ns0#Request_Criteria: {
            ns0#Transaction_Log_Criteria_Data: {
                ns0#Transaction_Date_Range_Data: {
                    ns0#Updated_From: p('migration.startDate'),
                    ns0#Updated_Through: (now() - |PT6S|)
                }
            },
            ns0#Exclude_Inactive_Workers: true,
            ns0#Exclude_Employees: false,
            ns0#Exclude_Contingent_Workers: false
        },
        ns0#Response_Group: {
            ns0#Include_Reference: true,
            ns0#Include_Personal_Information: true,
            ns0#Include_Transaction_Log_Data: true,
            ns0#Include_User_Account: true
        }
    }
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<workday:human-resources doc:name="Query workday for existing employee" doc:id="de602a70-d6a8-4868-ae7a-503ac74c50c8" config-ref="Workday_Config" operation="Get_Workers"/>
		<ee:transform doc:name="Filter response" doc:id="29e11f39-d7ad-4e29-b095-3d7ea3d22f09">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/java
ns ns0 urn:com.workday/bsvc
---
if (payload.ns0#Get_Workers_Response.ns0#Response_Data != null) 
    ((payload.ns0#Get_Workers_Response.ns0#Response_Data.*ns0#Worker
filter ($.ns0#Worker_Data.ns0#Personal_Data.ns0#Contact_Data.ns0#Email_Address_Data.ns0#Email_Address != null 
and $.ns0#Worker_Data.ns0#Personal_Data.ns0#Contact_Data.ns0#Email_Address_Data.ns0#Email_Address != ''))
distinctBy $.ns0#Worker_Data.ns0#Personal_Data.ns0#Contact_Data.ns0#Email_Address_Data.ns0#Email_Address)
else []]]></ee:set-payload>
            </ee:message>
        </ee:transform>
	</sub-flow>
	<flow name="mainFlow" doc:id="7c0a5bef-b3d5-442f-bff3-10d038f69a5e" >
    <flow-ref doc:name="Reference to queryFromWorkdaySubFlow" doc:id="88e1e32a-d922-4f51-8c2f-e6f57fbe1b2a" name="queryFromWorkdaySubFlow"/>
		<flow-ref doc:name="businessLogicFlow" doc:id="91360ede-4d71-44c7-9b64-8ee762e04ea0" name="businessLogicFlow"/>
    <error-handler >
        <on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="488b507d-e26c-4c56-8759-8bb4f6645d71" type="ANY">
            <flow-ref doc:name="errorHandlingFlow" doc:id="afdaf73c-0137-4d60-84f6-5c41234771a3" name="errorHandlingFlow" />
        </on-error-propagate>
    </error-handler>
</flow>
</mule>


        